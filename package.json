{
	"name": "lowclass",
	"version": "4.9.2",
	"description": "JavaScript/TypeScript class inheritance tools.",
	"type": "module",
	"main": "dist/index.js",
	"types": "dist/index.d.ts",
	"exports COMMENT:": "This removes 'dist' from import statements, as well as replaces the 'main' field. See https://github.com/nodejs/node/issues/14970#issuecomment-571887546",
	"exports": {
		".": "./dist/index.js",
		"./": "./dist/"
	},
	"scripts": {
		"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX BUILDER SCRIPTS": "",
		"test": "LOCAL_DEV=true builder run npm:test",
		"test:debug": "LOCAL_DEV=true builder run npm:test-debug",
		"tsc": "LOCAL_DEV=true builder run tsc",
		"tsc:watch": "LOCAL_DEV=true builder run tsc:watch",
		"typecheck": "LOCAL_DEV=true builder run typecheck",
		"typecheck:watch": "LOCAL_DEV=true builder run typecheck:watch",
		"prettier": "LOCAL_DEV=true builder run prettier",
		"release:patch": "LOCAL_DEV=true builder run release:patch",
		"release:minor": "LOCAL_DEV=true builder run release:minor",
		"release:major": "LOCAL_DEV=true builder run release:major",
		"version": "LOCAL_DEV=true builder run npm:version",
		"postversion": "LOCAL_DEV=true builder run npm:postversion",
		"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX LUME SCRIPTS": "",
		"clean": "lume clean",
		"build": "lume build",
		"dev": "lume dev",
		"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX OTHER SCRIPTS": "",
		"serve": "browser-sync start --server ./ --files dist --port 12345"
	},
	"repository": {
		"type": "git",
		"url": "git+ssh://git@github.com/trusktr/lowclass.git"
	},
	"author": "Joe Pea <joe@trusktr.io>",
	"license": "MIT",
	"bugs": {
		"url": "https://github.com/trusktr/lowclass/issues"
	},
	"homepage": "http://github.com/trusktr/lowclass#readme",
	"dependencies": {
		"@babel/runtime": "7.0.0-beta.46"
	},
	"devDependencies": {
		"browser-sync": "^2.26.7",
		"builder": "^5.0.0",
		"builder-js-package": "^1.0.0",
		"prettier": "^1.19.1"
	},
	"keywords": [
		"classes",
		"es5 classes",
		"classical inheritance",
		"classical",
		"prototype",
		"prototypical inheritance",
		"prototypes",
		"prototype classes",
		"private",
		"protected",
		"access specifiers",
		"access modifiers"
	]
}
